'use strict';(function(a){"object"==typeof exports&&"object"==typeof module?a(require("../../lib/codemirror"),require("../haskell/haskell")):"function"==typeof define&&define.amd?define(["../../lib/codemirror","../haskell/haskell"],a):a(CodeMirror)})(function(a){a.defineMode("haskell-literate",function(e,d){var b=a.getMode(e,d&&d.base||"haskell");return{startState:function(){return{inCode:!1,baseState:a.startState(b)}},token:function(a,c){if(a.sol()&&(c.inCode=a.eat(">")))return"meta";if(c.inCode)return b.token(a,
c.baseState);a.skipToEnd();return"comment"},innerMode:function(a){return a.inCode?{state:a.baseState,mode:b}:null}}},"haskell");a.defineMIME("text/x-literate-haskell","haskell-literate")});
